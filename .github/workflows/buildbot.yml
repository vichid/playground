name: buildbot
on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:

      - name: Generate build number
        shell: bash
        run: echo "BUILD_NUMBER=$(expr $GITHUB_RUN_NUMBER + 5210)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'zulu'

      - name: Generate cache key
        run: chmod +x scripts/checksum.sh ; ./scripts/checksum.sh checksum.txt

      - name: Cache
        uses: actions/cache@v2
        continue-on-error: true
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and check
        run: |
          ./gradlew -Pplayground.versioncode=$BUILD_NUMBER --scan --stacktrace --continue --no-daemon\
               check \
               app:assembleDebug bundle \
               koverCollectReports

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: build/reports

      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: junit-results
          path: junit

      - name: Coverage
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
