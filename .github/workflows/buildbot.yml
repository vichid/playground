name: buildbot

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Generate build number
        shell: bash
        run: echo "BUILD_NUMBER=$(expr $GITHUB_RUN_NUMBER + 5210)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for checksum.sh
        run: chmod +x checksum.sh

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - uses: actions/cache@v2
        continue-on-error: true # continue if the cache restore/upload fails
        with:
          path: |
            ~/.gradle/caches/modules-*
            ~/.gradle/caches/jars-*
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}

      - name: Build and check
        run: |
          ./gradlew -Pplayground.versioncode=$BUILD_NUMBER --scan --stacktrace --continue --no-daemon\
               spotlessCheck \
               assemble bundle \
               app:lintDebug \
               testDebug

      - name: Upload build outputs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: app/build/reports

      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: junit-results
          path: junit

