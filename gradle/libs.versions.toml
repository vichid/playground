[versions]
activityCompose = "1.5.1"
anvil = "2.4.1"
appCompat = "1.4.2"
automator = "2.2.0"
autoService = "1.0.1"
benchmark = "1.1.0"
compose = "1.2.0-rc03"
compose-compiler = "1.3.0-rc01"
compose-material3 = "1.0.0-alpha14"
compose-navigation = "2.5.1"
coroutines = "1.6.4"
dagger = "2.43.1"
detekt = "1.21.0"
detekt-customRules = "0.2.0"
gradlePlugins-buildPlugin = "0.2.0"
inject = "1"
junit5 = "1.8.2.0"
jupiter = "5.8.2"
kotlin = "1.7.10"
kotlin-poet = "1.12.0"
leakcanary = "2.9.1"
lifecycle = "2.5.1"
moshi-kotlin = "1.13.0"
profileinstaller = "1.2.0"
retrofit = "2.9.0"
showkase = "1.0.0-beta13"
splashScreen = "1.0.0"
startup = "1.1.1"
store = "4.0.5"
timber = "5.0.1"
truth = "1.1.3"
turbine = "0.8.0"

[libraries]
androidx-activity-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "activityCompose" }
androidx-appCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
androidx-benchmark = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "benchmark" }
androidx-compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "compose-compiler" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-compose-materialIconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
androidx-compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
androidx-compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
androidx-compose-runtimeLivedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
androidx-compose-uiGraphics = { module = "androidx.compose.ui:ui-graphics", version.ref = "compose" }
androidx-compose-uiText = { module = "androidx.compose.ui:ui-text", version.ref = "compose" }
androidx-compose-uiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
androidx-compose-uiToolingPreview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
androidx-core-splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
androidx-lifecycle-lifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-lifecycle-viewmodelCompose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-profileinstaller = { module = "androidx.profileinstaller:profileinstaller", version.ref = "profileinstaller" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startup" }
androidx-test-uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "automator" }
anvil-annotations = { module = "com.squareup.anvil:annotations", version.ref = "anvil" }
anvil-compiler-api = { module = "com.squareup.anvil:compiler-api", version.ref = "anvil" }
anvil-compiler-utils = { module = "com.squareup.anvil:compiler-utils", version.ref = "anvil" }
autoService = { module = "com.google.auto.service:auto-service", version.ref = "autoService" }
autoService-annotations = { module = "com.google.auto.service:auto-service-annotations", version.ref = "autoService" }
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-customRules = { module = "io.github.vichid:detekt.rules", version.ref = "detekt-customRules" }
google-dagger-dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
google-dagger-daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
gradlePlugins-buildPlugin = { module = "io.github.vichid:build-plugin", version.ref = "gradlePlugins-buildPlugin" }
inject-annotations = { module = "javax.inject:javax.inject", version.ref = "inject" }
jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "jupiter" }
jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "jupiter" }
jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "jupiter" }
kotlinCompilerEmbeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "coroutines" }
kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlin-extensions = { module = "org.jetbrains.kotlin:kotlin-android-extensions", version.ref = "kotlin" }
kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlin-poet" }
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi-kotlin" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
showkase = { module = "com.airbnb.android:showkase", version.ref = "showkase" }
showkaseProcessor = { module = "com.airbnb.android:showkase-processor", version.ref = "showkase" }
store = { module = "com.dropbox.mobile.store:store4", version.ref = "store" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
truth = { module = "com.google.truth:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[bundles]
unitTests = ["jupiter-api", "jupiter-params", "truth", "turbine", "kotlin-coroutines-test"]
